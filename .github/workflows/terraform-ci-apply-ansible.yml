name: Terraform CI + Apply + Ansible

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  terraform:
    name: Terraform Plan and Apply
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Instalar Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.6

    - name: Configurar credenciais AWS
      run: |
        mkdir -p ~/.aws
        echo "[default]" > ~/.aws/credentials
        echo "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> ~/.aws/credentials
        echo "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ~/.aws/credentials

    - name: Inicializar Terraform
      run: terraform init

    - name: Validar sintaxe
      run: terraform validate

    - name: Rodar TFLint
      run: |
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
        tflint

    - name: Gerar plano
      run: terraform plan

    - name: Aplicar infraestrutura
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve

  ansible:
    name: Ansible Provisioning
    needs: terraform
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Instalar Ansible
      run: |
        sudo apt update
        sudo apt install -y ansible openssh-client

    - name: Preparar chave SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts

    - name: Rodar playbook Ansible
      run: |
        echo "[web]" > inventory.ini
        echo "${{ secrets.EC2_PUBLIC_IP }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.ini
        ansible-playbook -i inventory.ini ansible/playbook.yml

